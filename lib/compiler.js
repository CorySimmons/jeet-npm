// Generated by CoffeeScript 1.5.0
(function() {
  var autoprefixer, cleancss, exports, fs, stylus;

  stylus = require("stylus");

  fs = require("fs");

  autoprefixer = require("autoprefixer");

  cleancss = require("clean-css");

  exports = module.exports = function(path, outname, outpath, cb) {
    var file;
    if (!fs.existsSync(path + outname + ".styl")) {
      console.log("\x1B[0;31mAborting: Can't find " + outname + ".styl\x1B[0;0m");
      process.kill();
    }
    file = fs.readFileSync(path + outname + ".styl");
    return stylus(file.toString()).set('paths', [path, path + "jeet/"]).render(function(err, css) {
      var fileline, filename, i, line, linenumber, msg, reload;
      if (err) {
        msg = err.message.split("\n");
        fileline = msg.shift().split(":");
        linenumber = fileline.pop();
        filename = outname + ".styl";
        if (fileline[0] !== "stylus") {
          filename = fileline[0].split("/").pop();
        }
        for (i in msg) {
          line = msg[i];
          if (line.charAt(1) === ">") {
            msg[i] = "\x1B[0;1m" + line + "\x1B[0;0m";
          }
        }
        msg.pop();
        msg.push("\x1B[0;31m" + msg.pop() + "\x1B[0;0m");
        console.log("\x1B[0;31mError\x1B[0;0m in\x1B[0;1m " + filename + "\x1B[0;0m on line \x1B[0;1m" + linenumber + "\x1B[0;0m");
        console.log("````````````````````````````````````");
        console.log(msg.join("\n"));
        console.log("````````````````````````````````````");
      } else {
        reload = true;
        if (!outpath) {
          outpath = path;
          reload = false;
        }
        if (outpath.charAt(outpath.length - 1) !== "/") {
          outpath = outpath + "/";
        }
        if (!fs.existsSync(outpath)) {
          fs.mkdirSync(outpath);
        }
        css = cleancss.process(autoprefixer.compile(css));
        return fs.writeFile(outpath + outname + ".css", css, function() {
          console.log("Recompiled " + outname + ".styl");
          if (reload) {
            return cb(outpath + outname + ".css");
          }
        });
      }
    });
  };

}).call(this);
